function [geneExpression, illuminaProbes, samples, sampleGEO] = loadData()
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/troncosp/Documents/Public-Datasets/2016-8-24_Fatty-Liver-Disease_Gene-Expression_Metabolomics/Original-Data/Gene-Expression-Omnibus_GSE46300/GSE46300_series_matrix.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/08/25 09:29:12

%% Initialize variables.
filename = '/Users/troncosp/Documents/Public-Datasets/2016-8-24_Fatty-Liver-Disease_Gene-Expression_Metabolomics/Original-Data/Gene-Expression-Omnibus_GSE46300/GSE46300_series_matrix.txt';
delimiter = '\t';


%% GENE EXPRESSION
% Initialize variables.
startRow = 61;

% Format string for each line of text:
%   column2: double (%f)
%   ...
%	column19: double (%f)
formatSpec = '%*q%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

% Open the text file.
fileID = fopen(filename,'r');

% Read columns of data according to format string.
textscan(fileID, '%[^\n\r]', startRow-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);

% Close the text file.
fclose(fileID);

% Create output variable
geneExpression = [dataArray{1:end-1}];
geneExpression(end,:) = [];  % last row has no expression data

% Clear temporary variables
clearvars startRow formatSpec fileID dataArray ans;


%% PROBEID
% Initialize variables.
startRow = 61;

% Format string for each line of text:
%   column1: text (%q)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%q%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%[^\n\r]';

% Open the text file.
fileID = fopen(filename,'r');

% Read columns of data according to format string.
textscan(fileID, '%[^\n\r]', startRow-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);

% Close the text file.
fclose(fileID);

% Create output variable
illuminaProbes = [dataArray{1:end-1}];
illuminaProbes(end) = [];

% Clear temporary variables
clearvars startRow formatSpec fileID dataArray ans;



%% SAMPLE TITLE
% Initialize variables.
startRow = 26;
endRow = 26;

%% Format string for each line of text:
%   column2: text (%q)
%	...
%	column19: text (%q)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

% Read columns of data according to format string.
textscan(fileID, '%[^\n\r]', startRow-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'ReturnOnError', false);

% Close the text file.
fclose(fileID);

% Create output variable
samples = [dataArray{1:end-1}];

% Clear temporary variables
clearvars startRow endRow formatSpec fileID dataArray ans;


%% SAMPLE GEO ACCESSION NUMBER
% Initialize variables.
startRow = 27;
endRow = 27;

%% Format string for each line of text:
%   column2: text (%q)
%	...
%	column19: text (%q)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

% Read columns of data according to format string.
textscan(fileID, '%[^\n\r]', startRow-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'ReturnOnError', false);

% Close the text file.
fclose(fileID);

% Create output variable
sampleGEO = [dataArray{1:end-1}];

% Clear temporary variables
clearvars startRow endRow formatSpec fileID dataArray ans;